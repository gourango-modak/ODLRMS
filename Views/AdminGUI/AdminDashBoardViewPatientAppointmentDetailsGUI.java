/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.AdminGUI;

import Database.DBConnection;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sajib
 */
public class AdminDashBoardViewPatientAppointmentDetailsGUI extends javax.swing.JFrame {

    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    String selected_ID;
    DefaultTableModel model;
    boolean visibleFlag = true;
    ArrayList<ViewAppointmentsData> list;
    
    public AdminDashBoardViewPatientAppointmentDetailsGUI() {
        initComponents();
        con = DBConnection.getConnection();
        setIDField();
        jPanel1.setEnabled(false);
        jPanel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PatientID = new javax.swing.JComboBox<>();
        MinimizeLabel = new javax.swing.JLabel();
        ClosedLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BackgroundImageLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PatientID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Patient ID" }));
        PatientID.setBorder(null);
        PatientID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                PatientIDItemStateChanged(evt);
            }
        });
        getContentPane().add(PatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 106, 130, 35));

        MinimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeLabelMouseClicked(evt);
            }
        });
        getContentPane().add(MinimizeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(842, 8, 16, 16));

        ClosedLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClosedLabelMouseClicked(evt);
            }
        });
        getContentPane().add(ClosedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 8, 16, 16));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment No", "Type", "Cost", "Date", "Time", "Patient ID", "Patient Name"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 350));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 900, 350));

        BackgroundImageLable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/AdminImg/AdminDashBoardViewPatientAppointmentDetailsGUI.png"))); // NOI18N
        getContentPane().add(BackgroundImageLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        setSize(new java.awt.Dimension(900, 550));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MinimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeLabelMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_MinimizeLabelMouseClicked

    private void ClosedLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClosedLabelMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_ClosedLabelMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for(double i=0.0; i<=1.0; i+=0.1) {
            String val = i+"";
            float fval = Float.valueOf(val);
            this.setOpacity(fval);
            try {
                Thread.sleep(50);
            }
            catch(Exception e) {
                
            }
        }
    }//GEN-LAST:event_formWindowOpened
    
    private class ViewAppointmentsData {
       String app_no;
       String type;
       String cost;
       String date;
       String time;
       String p_id;
       String p_name;
       
       public ViewAppointmentsData(String app_no, String type, String cost,String date,String time,String p_id,String p_name) {
           this.app_no = app_no;
           this.type = type;
           this.cost = cost;
           this.date = date;
           this.time = time;
           this.p_id = p_id;
           this.p_name = p_name;
       }
    }

    private void PatientIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_PatientIDItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            selected_ID = PatientID.getItemAt(PatientID.getSelectedIndex());
            if(selected_ID.equals("Select Patient ID")){
                jPanel1.setEnabled(false);
                jPanel1.setVisible(false);
                JOptionPane.showMessageDialog(null, "Please Select ID");
            }
            else {
                if(visibleFlag == false)
                    model.setRowCount(0);
                if(visibleFlag)
                    visibleFlag = false;
                jPanel1.setEnabled(true);
                jPanel1.setVisible(true);
                list = new ArrayList<ViewAppointmentsData>();
                if(con != null) {
                    try {

                        ps = con.prepareStatement("select app_no,type,cost,date,time,p.p_id,name from patient p,appointment a,test t "
                                + "where p.p_id=a.p_id and a.t_id=t.t_id\n" +
            "and a.p_id = ?");
                        ps.setInt(1,Integer.valueOf(selected_ID));
                        rs = ps.executeQuery();
                        while(rs.next()) {
                            ViewAppointmentsData vw = new ViewAppointmentsData(String.valueOf(rs.getInt(1)),rs.getString(2),String.valueOf(rs.getInt(3)),
                                    rs.getString(4),rs.getString(5),String.valueOf(rs.getInt(6)),rs.getString(7));
                            list.add(vw);
                        }

                        addRowToTable();

                }
                catch(Exception ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }               
                }
                else
                    JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
            }
        }
    }//GEN-LAST:event_PatientIDItemStateChanged
    
    
    private void addRowToTable() {
        model = (DefaultTableModel) jTable1.getModel();
        Object[] rowData = new Object[7];
        for(int i=0; i<list.size(); i++) {
            rowData[0] = list.get(i).app_no;
            rowData[1] = list.get(i).type;
            rowData[2] = list.get(i).cost;
            rowData[3] = list.get(i).date;
            rowData[4] = list.get(i).time;
            rowData[5] = list.get(i).p_id;
            rowData[6] = list.get(i).p_name;
            model.addRow(rowData);
        }
    }
    
    
    
    
    private void setIDField() {
        if(con != null) {
            try {
                ps = con.prepareStatement("SELECT * FROM patient");
                rs = ps.executeQuery();
                
                while(rs.next()) {
                    PatientID.addItem(String.valueOf(rs.getInt(1)));
                }
                
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }               
        }
        else
            JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardViewPatientAppointmentDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardViewPatientAppointmentDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardViewPatientAppointmentDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardViewPatientAppointmentDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashBoardViewPatientAppointmentDetailsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundImageLable;
    private javax.swing.JLabel ClosedLabel;
    private javax.swing.JLabel MinimizeLabel;
    private javax.swing.JComboBox<String> PatientID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
