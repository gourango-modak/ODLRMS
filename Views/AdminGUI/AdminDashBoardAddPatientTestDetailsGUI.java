/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.AdminGUI;

import Database.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sajib
 */
public class AdminDashBoardAddPatientTestDetailsGUI extends javax.swing.JFrame {

    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    String selected_ID;
    int selected_TdID;
    DefaultTableModel model;
    ArrayList<TestInfo> list;
    int SelectRowIndex;
    
    public AdminDashBoardAddPatientTestDetailsGUI() {
        initComponents();
        con = DBConnection.getConnection();
        list = new ArrayList<TestInfo>();
        setTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MinimizeLabel = new javax.swing.JLabel();
        ClosedLabel = new javax.swing.JLabel();
        Submit = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Update = new javax.swing.JButton();
        testValueData = new javax.swing.JTextField();
        BackgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MinimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeLabelMouseClicked(evt);
            }
        });
        getContentPane().add(MinimizeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(842, 8, 16, 16));

        ClosedLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClosedLabelMouseClicked(evt);
            }
        });
        getContentPane().add(ClosedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 8, 16, 16));
        getContentPane().add(Submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(823, 509, 54, 30));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Minimum", "Maximum", "Test Value"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(3).setHeaderValue("Test Value");
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 136, 900, 414));

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 63, 86, 34));

        testValueData.setBackground(new java.awt.Color(55, 26, 56));
        testValueData.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        testValueData.setForeground(new java.awt.Color(255, 255, 255));
        testValueData.setBorder(null);
        getContentPane().add(testValueData, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 63, 150, 30));

        BackgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/AdminImg/AdminDashBoardAddPatientTestDetailsGUI.png"))); // NOI18N
        getContentPane().add(BackgroundImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 550));

        setSize(new java.awt.Dimension(900, 550));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MinimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeLabelMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_MinimizeLabelMouseClicked

    private void ClosedLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClosedLabelMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_ClosedLabelMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for(double i=0.0; i<=1.0; i+=0.1) {
            String val = i+"";
            float fval = Float.valueOf(val);
            this.setOpacity(fval);
            try {
                Thread.sleep(50);
            }
            catch(Exception e) {
                
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        String app_no = AdminDashBoardPatientTestDetailsGUI.selected_app_no;
        model.setRowCount(0);
        list.clear();
        if(con != null) {
            try {
                ps = con.prepareStatement("UPDATE `patient_test_details` SET `Test_value`=? WHERE td_id = ? and app_no = ?");
                ps.setInt(1, Integer.valueOf(testValueData.getText()));
                ps.setInt(3, Integer.valueOf(app_no));
                ps.setInt(2, selected_TdID);
                ps.executeUpdate();
                setTableData();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }               
        }else
            JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
    }//GEN-LAST:event_UpdateActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        SelectRowIndex = jTable2.getSelectedRow();
        if(con != null) {
            try {
                ps = con.prepareStatement("select td_id from test_details where Name = ?");
                ps.setString(1, model.getValueAt(SelectRowIndex, 0).toString());
                //JOptionPane.showMessageDialog(null, model.getValueAt(SelectRowIndex, 0).toString());
                rs = ps.executeQuery();
                rs.next();
                selected_TdID = rs.getInt(1);
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }               
        }else
            JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
        testValueData.setText(model.getValueAt(SelectRowIndex, 3).toString());
    }//GEN-LAST:event_jTable2MouseClicked

    private class TestInfo {
       String name;
       int min;
       int maxi;
       int testValue;
       
       public TestInfo(String name, int min, int maxi, int testValue) {
           this.name = name;
           this.min = min;
           this.maxi = maxi;
           this.testValue = testValue;
       }
    }
    
    private void setTableData() {
        if(con != null) {
            try {
                ps = con.prepareStatement("Select * from test_details where t_id = ?");
                ps.setString(1, AdminDashBoardPatientTestDetailsGUI.selected_TestID);

                rs = ps.executeQuery();
                
                while(rs.next()) {
                    TestInfo ti = new TestInfo(rs.getString(2),rs.getInt(3),rs.getInt(4),0);
                    list.add(ti);
                }
                
                
                ps = con.prepareStatement("Select * from patient_test_details where app_no = ?");
                ps.setString(1, AdminDashBoardPatientTestDetailsGUI.selected_app_no);

                rs = ps.executeQuery();
                int i=0;
                while(rs.next()) {
                    list.get(i).testValue = rs.getInt(2);
                    i++;
                }
                
//                ps = con.prepareStatement("Select * from patient_test_details where app_no = ?");
//                ps.setString(1, AdminDashBoardPatientTestDetailsGUI.selected_app_no);
//
//                rs = ps.executeQuery();
//                
//                int j = 0;
//                while(rs.next()) {
//                    list.get(i-1).testValue = rs.getInt(2);
//                    i--;
//                }
                
                
                
                addRowToTable();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }               
        }
        else
            JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
    }
    private void addRowToTable() {
        model = (DefaultTableModel) jTable2.getModel();
        Object[] rowData = new Object[4];
        for(int i=0; i<list.size(); i++) {
            rowData[0] = list.get(i).name;
            rowData[1] = list.get(i).min;
            rowData[2] = list.get(i).maxi;
            rowData[3] = list.get(i).testValue;
            
            model.addRow(rowData);
        }
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardAddPatientTestDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardAddPatientTestDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardAddPatientTestDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashBoardAddPatientTestDetailsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashBoardAddPatientTestDetailsGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundImageLabel;
    private javax.swing.JLabel ClosedLabel;
    private javax.swing.JLabel MinimizeLabel;
    private javax.swing.JLabel Submit;
    private javax.swing.JButton Update;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField testValueData;
    // End of variables declaration//GEN-END:variables
}
