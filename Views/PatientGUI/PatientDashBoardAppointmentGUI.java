/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.PatientGUI;

import Database.DBConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author sajib
 */
public class PatientDashBoardAppointmentGUI extends javax.swing.JFrame {

    Connection con;
    PreparedStatement ps;
    ResultSet rs;
    ArrayList<String> list;
    protected static String Appointment_No;
    protected static String Test_detail;
    protected static String date;
    protected static String time;
    
    public PatientDashBoardAppointmentGUI() {
        initComponents();
        con = DBConnection.getConnection();
        list = new ArrayList<String>();
        setAppointmentIDField();
        setTestDetails();
        setTimes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MouseClickBackPatientDashBoardTOP = new javax.swing.JLabel();
        MouseClickBackPatientDashBoardLEFT = new javax.swing.JLabel();
        MouseClickBackPatientDashBoardBOTTOM = new javax.swing.JLabel();
        MouseClickBackPatientDashBoardRIGHT = new javax.swing.JLabel();
        AppointmentNo = new javax.swing.JTextField();
        TestDetails = new javax.swing.JComboBox<>();
        SelectTime = new javax.swing.JComboBox<>();
        SelectDate = new com.toedter.calendar.JDateChooser();
        Next = new javax.swing.JLabel();
        BackgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MouseClickBackPatientDashBoardTOP.setPreferredSize(new java.awt.Dimension(900, 42));
        MouseClickBackPatientDashBoardTOP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClickBackPatientDashBoardTOPMouseClicked(evt);
            }
        });
        getContentPane().add(MouseClickBackPatientDashBoardTOP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        MouseClickBackPatientDashBoardLEFT.setPreferredSize(new java.awt.Dimension(310, 466));
        MouseClickBackPatientDashBoardLEFT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClickBackPatientDashBoardLEFTMouseClicked(evt);
            }
        });
        getContentPane().add(MouseClickBackPatientDashBoardLEFT, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 42, -1, -1));

        MouseClickBackPatientDashBoardBOTTOM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClickBackPatientDashBoardBOTTOMMouseClicked(evt);
            }
        });
        getContentPane().add(MouseClickBackPatientDashBoardBOTTOM, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 508, 900, 42));

        MouseClickBackPatientDashBoardRIGHT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MouseClickBackPatientDashBoardRIGHTMouseClicked(evt);
            }
        });
        getContentPane().add(MouseClickBackPatientDashBoardRIGHT, new org.netbeans.lib.awtextra.AbsoluteConstraints(592, 42, 308, 466));

        AppointmentNo.setBackground(new java.awt.Color(49, 19, 50));
        AppointmentNo.setForeground(new java.awt.Color(255, 255, 255));
        AppointmentNo.setBorder(null);
        getContentPane().add(AppointmentNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(443, 155, 84, 16));

        TestDetails.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Test Details" }));
        TestDetails.setBorder(null);
        getContentPane().add(TestDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 214, 145, 35));

        SelectTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Time" }));
        SelectTime.setBorder(null);
        getContentPane().add(SelectTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 346, 145, 35));
        getContentPane().add(SelectDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(424, 280, 145, 35));

        Next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NextMouseClicked(evt);
            }
        });
        getContentPane().add(Next, new org.netbeans.lib.awtextra.AbsoluteConstraints(513, 416, 54, 30));

        BackgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/PatientImg/PatientDashBoardAppointmentGUI1.png"))); // NOI18N
        getContentPane().add(BackgroundImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(900, 550));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MouseClickBackPatientDashBoardTOPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseClickBackPatientDashBoardTOPMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_MouseClickBackPatientDashBoardTOPMouseClicked

    private void MouseClickBackPatientDashBoardLEFTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseClickBackPatientDashBoardLEFTMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_MouseClickBackPatientDashBoardLEFTMouseClicked

    private void MouseClickBackPatientDashBoardRIGHTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseClickBackPatientDashBoardRIGHTMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_MouseClickBackPatientDashBoardRIGHTMouseClicked

    private void MouseClickBackPatientDashBoardBOTTOMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MouseClickBackPatientDashBoardBOTTOMMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_MouseClickBackPatientDashBoardBOTTOMMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for(double i=0.0; i<=1.0; i+=0.1) {
            String val = i+"";
            float fval = Float.valueOf(val);
            this.setOpacity(fval);
            try {
                Thread.sleep(50);
            }
            catch(Exception e) {
                
            }
        }
    }//GEN-LAST:event_formWindowOpened

    private void NextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NextMouseClicked
        Test_detail = TestDetails.getSelectedItem().toString();
        Date d = SelectDate.getDate();
        date = DateFormat.getDateInstance().format(d);
        time = SelectTime.getSelectedItem().toString();
        new PatientDashBoardAppointmentGUI2().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_NextMouseClicked
    
    private void setTimes() {
        ArrayList<String> timelist = new ArrayList<String>();
        timelist.add("8:00am - 8:30am");
        timelist.add("8:30am - 9:00am");
        timelist.add("9:00am - 9:30am");
        timelist.add("9:30am - 10:00am");
        timelist.add("10:00am - 10:30am");
        timelist.add("10:30am - 11:00am");
        timelist.add("11:00am - 11:30am");
        timelist.add("11:30am - 12:00am");
        timelist.add("12:00pm - 12:30pm");
        timelist.add("12:30pm - 1:00pm");
        timelist.add("3:00pm - 3:30pm");
        timelist.add("3:30pm - 4:00pm");
        timelist.add("4:00pm - 4:30pm");
        timelist.add("4:30pm - 5:00pm");
        
        
        for(int i=0; i<timelist.size(); i++) {
            SelectTime.addItem(timelist.get(i));
        }
    }
    
    
    private void setTestDetails() {
        if(con != null) {
            try {
                ps = con.prepareStatement("SELECT * FROM Test");
                rs = ps.executeQuery();
                
                while(rs.next()) {
                    String tmp = rs.getString(2)+"-"+String.valueOf(rs.getInt(3));
                    list.add(tmp);
                }
                
                for(int i=0; i<list.size(); i++) {
                    TestDetails.addItem(list.get(i));
                }
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }               
        }
        else
            JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
    }
    
    
    private void setAppointmentIDField() {
        if(con != null) {
            int count = 0;
            try {
                ps = con.prepareStatement("SELECT * FROM Appointment");
                rs = ps.executeQuery();
                
                while(rs.next()) {
                    count++;
                }
                
                AppointmentNo.setText(String.valueOf(5000+count));
                Appointment_No = AppointmentNo.getText();
            }
            catch(Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }               
        }
        else
            JOptionPane.showMessageDialog(null, "DateBase Connection Failed");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDashBoardAppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDashBoardAppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDashBoardAppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDashBoardAppointmentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientDashBoardAppointmentGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AppointmentNo;
    private javax.swing.JLabel BackgroundImageLabel;
    private javax.swing.JLabel MouseClickBackPatientDashBoardBOTTOM;
    private javax.swing.JLabel MouseClickBackPatientDashBoardLEFT;
    private javax.swing.JLabel MouseClickBackPatientDashBoardRIGHT;
    private javax.swing.JLabel MouseClickBackPatientDashBoardTOP;
    private javax.swing.JLabel Next;
    private com.toedter.calendar.JDateChooser SelectDate;
    private javax.swing.JComboBox<String> SelectTime;
    private javax.swing.JComboBox<String> TestDetails;
    // End of variables declaration//GEN-END:variables
}
